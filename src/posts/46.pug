extends blogpost

block post
  p My bookmarks list has become a graveyard for things I want to revisit but haven't found the time to. Here is the list of bookmarks from the four computers I use. This is a window to my thoughts.

  ul
    li
      a(href='http://dev.stephendiehl.com/hask/') What I wish I knew when learning Haskell
    li
      a(href='https://stackoverflow.com/q/40275080/2397327') How do you use TypeApplications in Haskell?
    li
      a(href='https://www.reddit.com/r/haskell/comments/npxfba/ive_tried_to_learn_haskell_several_times_but_keep/?utm_source=share&utm_medium=web2x&context=3') I've tried to learn Haskell several times. But keep failing.
    li
      a(href='https://data.typeracer.com/pit/text_info?id=4350594') Typeracer quote: "It's a good idea to tell the person ..."
    li 
      a(href='https://stackoverflow.com/q/61482257/2397327') Besides as-pattern, what else can @ mean in Haskell?
    li
      a(href='https://plv.mpi-sws.org/rustbelt/#publications') RustBelt publications
    li
      a(href='https://github.com/carp-lang/Carp') Carp language: A statically typed lisp, without a GC, for real-time applications.
    li
      a(href='https://cstheory.stackexchange.com/q/184') What's the difference between the Actor Model of Concurrency and Communicating Sequential Processes
    li
      a(href='https://en.wikipedia.org/wiki/Unbounded_nondeterminism') Unbounded nondeterminism
    li
      a(href='https://emacs.stackexchange.com/q/27154') Exporting highlighted source code to pdf in Org-Mode
    li
      a(href='http://blog.ezyang.com/2011/08/8-ways-to-report-errors-in-haskell-revisited/') 8 ways to report errors in Haskell revisited
    li
      a(href='https://free.cofree.io/2020/09/01/type-errors/') Un-obscuring a few GHC type error messages
    li
      a(href='https://markkarpov.com/post/haskell-vs-ocaml.html') Haskell vs OCaml
    li
      a(href='https://www.reddit.com/r/orgmode/comments/9y52f2/i_want_to_work_on_tables_using_elisp/') I want to work on tables using elisp
    li
      a(href='http://www.cs.cmu.edu/~rwh/courses/chtt/') 15-819 Computational Type Theory
    li
      a(href='http://www.cs.cmu.edu/Groups/pop/') Principles of Programming Group -- Carnegie Mellon University
    li
      a(href='https://jrsinclair.com/articles/2019/algebraic-data-types-what-i-wish-someone-had-explained-about-functional-programming/') Algebraic data types: things I wish someone had explained about functional programming
    li
      a(href='https://en.wikipedia.org/wiki/ML_(programming_language)') ML (programming language)
    li
      a(href='https://stackoverflow.com/q/28123453/2397327') What is the difference between traits in Rust and typeclasses in Haskell?
    li
      a(href='https://github.com/hlissner/emacs-doom-themes') emacs-doom-themes: An opinionated pack of modern color-themes
    li
      a(href='https://tuhdo.github.io/helm-intro.html') A Package in a league of its own: Helm
    li
      a(href='https://github.com/emacs-helm/helm') helm: Emacs incremental completion and selection narrowing framework
    li
      a(href='https://github.com/abo-abo/swiper') swiper: Ivy - a generic completion frontend for Emacs, Swiper - isearch with an overview, and more. Oh, man!
    li
      a(href='https://gist.github.com/anandabits/02be1c40cdb2a9f90d0c82320b589cda') Value semantics and pure functions: referential transparency for Swift
    li
      a(href='https://hackingcpp.com/cs/value_vs_reference_semantics.html') Value Semantics vs. Reference Semantics
    li
      a(href='https://stackoverflow.com/q/32059370/2397327') When is it appropriate to use an associated type versus a generic type?
    li
      a(href='https://www.youtube.com/watch?v=rjo5IjJyORI') Marijn Haverbeke: JavaScript Compilation Techniques or "Wasn't JavaScript supposed to be slow?"
    li
      a(href='https://www.youtube.com/watch?v=v2ifWcnQs6M') Douglas Crockford: The JavaScript Programming Language
    li
      a(href='https://doc.rust-lang.org/nomicon/') The Rustonomicon
    li
      a(href='https://en.wikipedia.org/wiki/Design_Patterns') Design Patterns: Elements of Reusable Object-Oriented Software
    li
      a(href='https://wiki.haskell.org/Existential_type') Existential type
    li
      a(href='https://stackoverflow.com/q/292274/2397327') What is an existential type?
    li
      a(href='https://users.rust-lang.org/t/difference-between-returning-dyn-box-trait-and-impl-trait/57640') Difference between returning dyn Box<Trait> and impl Trait
    li
      a(href='https://www.reddit.com/r/rust/comments/a3da5g/my_entire_emacs_config_for_rust_in_fewer_than_20/') My entire Emacs config for Rust, in fewer than 20 lines of Elisp
    li
      a(href='https://stackoverflow.com/q/201386/2397327') What exactly is Intentional Programming
    li
      a(href='http://owenransen.blogspot.com/2019/07/whatever-happened-to-intentional.html') Whatever happened to Intentional Software of Simonyi?
    li
      a(href='https://www.nytimes.com/2007/01/28/technology/28iht-soft.4373062.html') The promise and peril of 'intentional software' - Technology & Media - International Herald Tribune
    li
      a(href='https://quoteinvestigator.com/2013/09/24/god-knows/') When I Wrote It, Only God and I Knew the Meaning; Now God Alone Knows -- Quote Investigator
    li
      a(href='https://imgur.com/hH8hGaC') Only God Knows -- Imgur
    li
      a(href='https://stackoverflow.com/q/184618/2397327') What is the best comment in source code you have ever encountered?
    li
      a(href='https://thehackerblog.com/the-io-error-taking-control-of-all-io-domains-with-a-targeted-registration/') The .io Error â€“ Taking Control of All .io Domains With a Targeted Registration
    li
      a(href='https://github.com/serras/emacs-haskell-tutorial') emacs-haskell-tutorial: Tutorial on setting up Emacs to do Haskell programming
    li
      a(href='https://chrisdone.com/posts/haskell-doesnt-have-macros/') Haskell doesn't have macros
    li
      a(href='https://hackage.haskell.org/package/lens-tutorial-1.0.4/docs/Control-Lens-Tutorial.html') Control.Lens.Tutorial
    li
      a(href='https://www.seas.upenn.edu/~cis194/fall16/') CIS 194: Introduction to Haskell
    li
      a(href='https://stackoverflow.com/q/14796457/2397327') Diagnostic output in Haskell
    li
      a(href='https://stackoverflow.com/q/19545253/2397327') Haskell replace characters in string
